/**
 * Evaluate.java
 * Ashish D'Souza
 * @computer-geek64
 * December 20th, 2018
 */

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

public class Evaluate extends javax.swing.JFrame {

    /**
     * Creates new form Evaluate
     */
    public Evaluate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        informationPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        yearLabel = new javax.swing.JLabel();
        yearTextField = new javax.swing.JTextField();
        monthLabel = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<>();
        dayLabel = new javax.swing.JLabel();
        dayTextField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Deep Learning for Tropospheric Ozone Prediction");

        authorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        authorLabel.setText("Ashish D'Souza, Engineering Design Technology");

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
            .addComponent(authorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(authorLabel))
        );

        container.setLayout(new java.awt.GridLayout(3, 2, 10, 10));

        yearLabel.setText("Year:");
        container.add(yearLabel);

        yearTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearTextFieldFocusLost(evt);
            }
        });
        yearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTextFieldActionPerformed(evt);
            }
        });
        yearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                yearTextFieldKeyTyped(evt);
            }
        });
        container.add(yearTextField);

        monthLabel.setText("Month:");
        container.add(monthLabel);

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboBoxActionPerformed(evt);
            }
        });
        container.add(monthComboBox);

        dayLabel.setText("Day:");
        container.add(dayLabel);

        dayTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayTextFieldFocusLost(evt);
            }
        });
        dayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTextFieldActionPerformed(evt);
            }
        });
        dayTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dayTextFieldKeyTyped(evt);
            }
        });
        container.add(dayTextField);

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        buttonPanel.add(back);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        buttonPanel.add(submit);

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        buttonPanel.add(reset);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        buttonPanel.add(exit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        resetActionPerformed(evt);
        this.setVisible(false);
        MTD.home.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        try {
            int year = Integer.parseInt(yearTextField.getText());
            int month = monthComboBox.getSelectedIndex();
            int day = Integer.parseInt(dayTextField.getText());
            Calendar cal = Calendar.getInstance();
            cal.setLenient(false);
            cal.setTime(new Date(year, month, day));
            cal.getTime();
            if(year != 2018) {
                throw new Exception();
            }
            
            resetActionPerformed(evt);
            
            Runtime runtime = Runtime.getRuntime();
            Process process = runtime.exec("fake");
            
            BufferedReader bufferedReader = new BufferedReader(
                    new InputStreamReader(process.getInputStream()));
            
            String line;
            while((line = bufferedReader.readLine()) != null) {
                System.out.println(line);
            }
            
            this.setVisible(false);
            MTD.home.setVisible(false);
            MTD.evaluateOutput.setVisible(true);
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, "Please enter a valid date.", "Error", 0);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        yearTextField.setText("");
        monthComboBox.setSelectedIndex(0);
        dayTextField.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Thank you for using this program.\n"
                + "Please continue to support open-source software by sharing "
                + "this project's GitHub repository at "
                + "\"https://computer-geek64.github.io/MTD/\"", "Thank you!",
                JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void yearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTextFieldActionPerformed
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_yearTextFieldActionPerformed

    private void dayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTextFieldActionPerformed
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_dayTextFieldActionPerformed

    private void dayTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayTextFieldFocusLost
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_dayTextFieldFocusLost

    private void yearTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearTextFieldFocusLost
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_yearTextFieldFocusLost

    private void yearTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearTextFieldKeyTyped
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_yearTextFieldKeyTyped

    private void dayTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayTextFieldKeyTyped
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_dayTextFieldKeyTyped

    private void yearTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearTextFieldFocusGained
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_yearTextFieldFocusGained

    private void dayTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayTextFieldFocusGained
        // TODO add your handling code here:
        if(monthComboBox.getSelectedIndex() != 0 && !yearTextField.getText().equals("") && !dayTextField.getText().equals("")) {
            submit.setEnabled(true);
            reset.setEnabled(true);
        }
        else {
            submit.setEnabled(false);
            reset.setEnabled(false);
        }
    }//GEN-LAST:event_dayTextFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Evaluate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Evaluate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Evaluate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Evaluate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Evaluate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel authorLabel;
    public javax.swing.JButton back;
    public javax.swing.JPanel buttonPanel;
    public javax.swing.JPanel container;
    public javax.swing.JLabel dayLabel;
    public javax.swing.JTextField dayTextField;
    public javax.swing.JButton exit;
    public javax.swing.JPanel informationPanel;
    public javax.swing.JComboBox<String> monthComboBox;
    public javax.swing.JLabel monthLabel;
    public javax.swing.JButton reset;
    public javax.swing.JButton submit;
    public javax.swing.JLabel titleLabel;
    public javax.swing.JLabel yearLabel;
    public javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
